dat__ = rnorm(N, mean=5,sd=1)
theta_hat_2[i] = exp(mean(dat__))
}
hist(theta_hat_2, breaks=50, freq=F)
lines(x_test, y_test, col="blue")
for(i in 1:1000){
dat__ = rnorm(N, mean=5,sd=1)
theta_hat_2[i] = exp(mean(dat__))
}
hist(theta_hat_2, breaks=50, freq=F)
print(x_test)
lines(x_test, y_test, col="blue")
for(i in 1:1000){
dat__ = rnorm(N, mean=5,sd=1)
theta_hat_2[i] = exp(mean(dat__))
}
hist(theta_hat_2, breaks=50, freq=F)
print(x_test)
lines(x_test, y_test, col="blue")
N = 100
theta_hat_2 = c()
for(i in 1:1000){
dat__ = rnorm(N, mean=5,sd=1)
theta_hat_2[i] = exp(mean(dat__))
}
hist(theta_hat_2, breaks=50, freq=F)
print(y_test)
lines(x_test, y_test, col="blue")
N = 100
theta_hat_2 = c()
for(i in 1:1000){
dat__ = rnorm(N, mean=5,sd=1)
theta_hat_2[i] = exp(mean(dat__))
}
hist(theta_hat_2, breaks=50, freq=F)
print(y_test)
lines(x_test, y_test, col="blue")
N = 100
theta_hat_2 = c()
for(i in 1:1000){
dat__ = rnorm(N, mean=5,sd=1)
theta_hat_2[i] = exp(mean(dat__))
}
hist(theta_hat_2, breaks=50, freq=F)
print(y_test)
lines(x_test, y_test, col="blue")
N = 100
theta_hat_2 = c()
for(i in 1:1000){
dat__ = rnorm(N, mean=5,sd=1)
theta_hat_2[i] = exp(mean(dat__))
}
hist(theta_hat_2, breaks=50, freq=F)
print(y_test)
lines(x_test, y_test, col="blue")
N = 100
theta_hat_2 = c()
for(i in 1:1000){
dat__ = rnorm(N, mean=5,sd=1)
theta_hat_2[i] = exp(mean(dat__))
}
hist(theta_hat_2, breaks=50, freq=F)
print(y_test)
lines(x_test, y_test, col="blue")
N = 100
theta_hat_2 = c()
for(i in 1:1000){
dat__ = rnorm(N, mean=5,sd=1)
theta_hat_2[i] = exp(mean(dat__))
}
hist(theta_hat_2, breaks=50, freq=F)
print(y_test)
lines(x_test, y_test, col="blue")
N = 100
theta_hat_2 = c()
for(i in 1:1000){
dat__ = rnorm(N, mean=5,sd=1)
theta_hat_2[i] = exp(mean(dat__))
}
hist(theta_hat_2, breaks=50, freq=F)
print(y_test)
lines(x_test, y_test, col="blue")
N = 100
theta_hat_2 = c()
for(i in 1:1000){
dat__ = rnorm(N, mean=5,sd=1)
theta_hat_2[i] = exp(mean(dat__))
}
hist(theta_hat_2, breaks=50, freq=F)
print(y_test)
lines(x_test, y_test, col="blue")
N = 100
theta_hat_2 = c()
for(i in 1:1000){
dat__ = rnorm(N, mean=5,sd=1)
theta_hat_2[i] = exp(mean(dat__))
}
hist(theta_hat_2, breaks=50, freq=F)
print(y_test)
lines(x_test, y_test, col="blue")
N = 100
theta_hat_2 = c()
for(i in 1:1000){
dat__ = rnorm(N, mean=5,sd=1)
theta_hat_2[i] = exp(mean(dat__))
}
hist(theta_hat_2, breaks=50, freq=F)
print(y_test)
lines(x_test, y_test, col="blue")
N = 100
theta_hat_2 = c()
for(i in 1:1000){
dat__ = rnorm(N, mean=5,sd=1)
theta_hat_2[i] = exp(mean(dat__))
}
hist(theta_hat_2, breaks=50, freq=F)
print(y_test)
lines(x_test, y_test, col="blue")
N = 100
theta_hat_2 = c()
for(i in 1:1000){
dat__ = rnorm(N, mean=5,sd=1)
theta_hat_2[i] = exp(mean(dat__))
}
hist(theta_hat_2, breaks=50, freq=F)
print(y_test)
lines(x_test, y_test, col="blue")
N = 100
theta_hat_2 = c()
for(i in 1:1000){
dat__ = rnorm(N, mean=5,sd=1)
theta_hat_2[i] = exp(mean(dat__))
}
hist(theta_hat_2, breaks=50, freq=F)
print(y_test)
lines(x_test, y_test, col="blue")
N = 100
theta_hat_2 = c()
for(i in 1:1000){
dat__ = rnorm(N, mean=5,sd=1)
theta_hat_2[i] = exp(mean(dat__))
}
hist(theta_hat_2, breaks=50, freq=F)
print(y_test)
lines(x_test, y_test, col="blue")
N = 100
theta_hat_2 = c()
for(i in 1:1000){
dat__ = rnorm(N, mean=5,sd=1)
theta_hat_2[i] = exp(mean(dat__))
}
hist(theta_hat_2, breaks=50, freq=F)
print(y_test)
lines(x_test, y_test, col="blue")
N = 100
theta_hat_2 = c()
for(i in 1:1000){
dat__ = rnorm(N, mean=5,sd=1)
theta_hat_2[i] = exp(mean(dat__))
}
hist(theta_hat_2, breaks=50, freq=F)
print(y_test)
lines(x_test, y_test, col="blue")
N = 100
theta_hat_2 = c()
for(i in 1:1000){
dat__ = rnorm(N, mean=5,sd=1)
theta_hat_2[i] = exp(mean(dat__))
}
hist(theta_hat_2, breaks=50, freq=F)
print(y_test)
lines(x_test, y_test, col="blue")
N = 100
theta_hat_2 = c()
for(i in 1:1000){
dat__ = rnorm(N, mean=5,sd=1)
theta_hat_2[i] = exp(mean(dat__))
}
hist(theta_hat_2, breaks=50, freq=F)
print(y_test)
lines(x_test, y_test, col="blue")
N = 100
theta_hat_2 = c()
for(i in 1:1000){
dat__ = rnorm(N, mean=5,sd=1)
theta_hat_2[i] = exp(mean(dat__))
}
hist(theta_hat_2, breaks=50, freq=F)
print(y_test)
lines(x_test, y_test, col="blue")
?boxplot
head(gapminder)
knitr::opts_chunk$set(echo = TRUE)
library(gapminder)
summary(gapminder)
gapminder %>% ggplot(aes(x=gdpPercap, y=lifeExp)) +
geom_point(col=continent) +
geom_smooth(method="loess", se=TRUE, level=0.95)
library(dplyr)
redwine %>% select(-label) %>% +1 %>% log() %>%
boxplot(redwine, use.cols = TRUE)
library(dplyr)
gapminder %>% ggplot(aes(x=gdpPercap, y=lifeExp)) +
geom_point(col=continent) +
geom_smooth(method="loess", se=TRUE, level=0.95)
library(gggplot2)
library(ggplot2)
gapminder %>% ggplot(aes(x=gdpPercap, y=lifeExp)) +
geom_point(col=continent) +
geom_smooth(method="loess", se=TRUE, level=0.95)
gapminder %>% ggplot(aes(x=gdpPercap, y=lifeExp)) +
geom_point(aes(col=continent)) +
geom_smooth(method="loess", se=TRUE, level=0.95)
library(repr)
library(repr)
install.packages("repr")
library(repr)
options(repr.plot.width=10, repr.plot.height=8)
gapminder %>% ggplot(aes(x=gdpPercap, y=lifeExp)) +
geom_point(aes(col=continent)) +
geom_smooth(method="loess", se=TRUE, level=0.95)
# install.packages("repr")
library(repr)
options(repr.plot.width=12, repr.plot.height=8)
gapminder %>% ggplot(aes(x=gdpPercap, y=lifeExp)) +
geom_point(aes(col=continent)) +
geom_smooth(method="loess", se=TRUE, level=0.95)
library(dplyr)
plt <- redwine %>% select(-label) %>% +1 %>% log() %>%
boxplot(redwine, use.cols = TRUE)
# install.packages("repr")
library(repr)
options(repr.plot.width=12, repr.plot.height=8)
gapminder %>% ggplot(aes(x=gdpPercap, y=lifeExp)) +
geom_point(aes(col=continent)) +
geom_smooth(method="loess", se=TRUE, level=0.95)
options(repr.plot.width=800, repr.plot.height=500)
# install.packages("repr")
library(repr)
options(repr.plot.width=12, repr.plot.height=8)
gapminder %>% ggplot(aes(x=gdpPercap, y=lifeExp)) +
geom_point(aes(col=continent)) +
geom_smooth(method="loess", se=TRUE, level=0.95)
options(repr.plot.width=1200, repr.plot.height=500)
# install.packages("repr")
library(repr)
options(repr.plot.width=12, repr.plot.height=8)
gapminder %>% ggplot(aes(x=gdpPercap, y=lifeExp)) +
geom_point(aes(col=continent)) +
geom_smooth(method="loess", se=TRUE, level=0.95)
options(repr.plot.width=2000, repr.plot.height=500)
# install.packages("repr")
library(repr)
options(repr.plot.width=12, repr.plot.height=8)
gapminder %>% ggplot(aes(x=gdpPercap, y=lifeExp)) +
geom_point(aes(col=continent)) +
geom_smooth(method="loess", se=TRUE, level=0.95) + coord_fixed(1.5)
# install.packages("repr")
library(repr)
options(repr.plot.width=12, repr.plot.height=8)
gapminder %>% ggplot(aes(x=gdpPercap, y=lifeExp)) +
geom_point(aes(col=continent)) +
geom_smooth(method="loess", se=TRUE, level=0.95) + coord_fixed(500)
?boxplot
head(gapminder)
?gapminder
?selectInput
library(shiny)
?selectInput
data?
?
""
?data
data()
?selectInput
data().name
?data()
data(mtcars)
?selectInput
?iris
iris[1]
iris[-1]
iris[-5]
colnames("mtcars")
colnames(mtcars)
?inputPanel
?selectInput
?numericInput
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp()
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp()
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp()
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp()
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp()
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
t(colnames(iris)
""
t(t(colnames(iris))
''
list("mpg", "disp", "wt")
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp()
runApp('Desktop/OneDrive_2020-10-02/testcc')
cat((colnames(iris)), , sep="\n")
?cat
runApp('Desktop/OneDrive_2020-10-02/testcc')
cat(colnames(iris), sep="\n")
list(cat(colnames(iris[-5]), sep="\n"))
runApp('Desktop/OneDrive_2020-10-02/testcc')
?kmeans
select(data, "Sepal.Length")
library(dplyr)
select(data, "Sepal.Length")
select(data, Sepal.Length)
iris %>% select(Sepal.Length)
runApp('Desktop/OneDrive_2020-10-02/testcc')
iris[[Petal.Width]]
iris[["Petal.Width"]]
iris[iris["Petal.Width"]]
iris[["Petal.Width"]["Petal.Length"]]
iris
as.data.frame(c(iris[["Petal.Width"]], iris[["Petal.Length"]]))
""
iris[c("Petal.Length", "Petal.Width")]
runApp('Desktop/OneDrive_2020-10-02/testcc')
iris[c("Petal.Length", "Petal.Width")]
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
iris[list("Petal.Length", "Petal.Width")]
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
?ifelse
?selectInput
?numericInput
?selectInput
install.packages("rmarkdown")
install.packages("rmarkdown")
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
shiny::runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
shinytest::recordTest("~/Desktop/OneDrive_2020-10-02/testcc")
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
shiny::runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
subset(iris, select=c(1,2,3))
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
?empty
?empty
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
runApp('Desktop/OneDrive_2020-10-02/testcc')
setwd("~/Workspaces/DSAI/Data-visualization-MDSAI")
album <- read_csv('data/wasabi_albums.csv')
library(readr)
library(dplyr)
album <- read_csv('data/wasabi_albums.csv')
head(album)
head(album$id_artist)
head(album$dateRelease)
album$dateRelease <- as.Date(album$dateRelease, format = "%Y-%m-%d")
head(album$dateRelease)
head(album$publicationDate)
album %>% select(c("_id", "genre", "id_artist", "length", "name", "publicationDate"))
album %>%
select(c("_id", "genre", "id_artist", "length", "name", "publicationDate")) %>%
filter(publicationDate = 1997)
album %>%
select(c("_id", "genre", "id_artist", "length", "name", "publicationDate")) %>%
filter(publicationDate == 1997)
albums <- read_csv('data/wasabi_albums.csv')
artists <- read_csv('data/wasabi_artists.csv')
albums %>%
select(c("_id", "genre", "id_artist", "length", "name", "publicationDate")) %>%
filter(publicationDate == 1997 && !is.null(`_id`))
head(artists)
colnames(artists)
View(album)
artists <- artists %>%
select(c("_id", "genres", "name", "location.country", "gender", "birthDate")) %>%
filter(!is.null(`_id`))
artists <- artists %>%
select(c("_id", "genres", "name", "location.country", "gender")) %>%
filter(!is.null(`_id`))
albums <- read_csv('data/wasabi_albums.csv')
artists <- read_csv('data/wasabi_artists.csv')
filter_albums <- albums %>%
select(c("_id", "genre", "id_artist", "length", "name", "publicationDate")) %>%
filter(publicationDate == 1997 && !is.null(`_id`))
filter_artists <- artists %>%
select(c("_id", "genres", "name", "location.country", "gender")) %>%
filter(!is.null(`_id`))
new_data <- filter_albums %>% left_join(filter_artists, by=c("id_artist"="_id"))
head(new_data)
filter_artists <- artists %>%
select(c("_id", "genres", "name", "location.country", "gender")) %>%
filter(!is.null(`_id`)) %>% names()[3] <- "artist_name"
filter_artists <- artists %>%
select(c("_id", "genres", "name", "location.country", "gender")) %>%
filter(!is.null(`_id`)) %>% names()[3] = "artist_name"
filter_artists <- artists %>%
select(c("_id", "genres", "name", "location.country", "gender")) %>%
filter(!is.null(`_id`)) %>%
names(filter_artists)[3] = "artist_name"
filter_artists <- artists %>%
select(c("_id", "genres", "name", "location.country", "gender")) %>%
filter(!is.null(`_id`))
names(filter_artists)[3] = "artist_name"
new_data <- filter_albums %>% left_join(filter_artists, by=c("id_artist"="_id"))
head(new_data)
summary(new_data)
